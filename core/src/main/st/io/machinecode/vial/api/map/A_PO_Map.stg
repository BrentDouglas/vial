delimiters "$", "$"

POMap(I, P, p, hck, hcv, X) ::= <<
/*
 * Copyright 2015 Brent Douglas and other contributors
 * as indicated by the @author tags. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.machinecode.vial.api.map;

import java.util.Map;

/**
 * @author <a href="mailto:brent.n.douglas@gmail.com">Brent Douglas</a>
 * @since 1.0
 */
public interface $I$OMap<V> extends Map<$P$,V>, Iterable<$I$OCursor<V$X$ {

    boolean xcontainsKey(final $p$ key);

    V xget(final $p$ key);

    V getOrDefault(final Object key, final V defaultValue);

    V xgetOrDefault(final $p$ key, final V defaultValue);

    $I$OMap<V> with(final $p$ key, final V value);

    V xput(final $p$ key, final V value);

    V xputIfAbsent(final $p$ key, final V value);

    V putIfAbsent(final $P$ key, final V value);

    boolean remove(final Object key, final Object value);

    V xremove(final $p$ key);

    boolean xremove(final $p$ key, final V value);

    boolean xremoveValue(final V value);

    V replace(final $P$ key, final V value);

    boolean replace(final $P$ key, final V oldValue, final V newValue);

    boolean xreplace(final $p$ key, final V oldValue, final V newValue);

    V xreplace(final $p$ key, final V value);

    $I$OMap<V> capacity(final int desired);

    $I$OCursor<V> iterator();
}
>>
