delimiters "$", "$"

PList(I, P, p, hck, hcv, X) ::= <<
/*
 * Copyright 2015 Brent Douglas and other contributors
 * as indicated by the @authors tag. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.machinecode.vial.api.list;

import io.machinecode.vial.api.$I$Collection;

import java.util.Collection;
import java.util.List;

/**
 * @author <a href="mailto:brent.n.douglas@gmail.com">Brent Douglas</a>
 * @since 1.0
 */
public interface $I$List extends $I$Collection, List<$P$> {

    @Override
    $I$List with(final $p$ value);

    @Override
    $I$List capacity(final int desired);

    boolean contains(final int from, final int to, final Object o);

    int indexOf(final int from, final int to, final Object o);

    int lastIndexOf(final int from, final int to, final Object o);

    boolean clear(final int from, final int to);

    boolean remove(final int from, final int to, final Object o);

    boolean containsAll(final int from, final int to, final Collection<?> c);

    boolean removeAll(final int from, final int to, final Collection<?> c);

    boolean retainAll(final int from, final int to, final Collection<?> c);

    Object[] toArray(final int from, final int to);

    <T> T[] toArray(final int from, final int to, final T[] a);

    boolean xadd(final int index, final $p$ o);

    $p$ xremoveAt(final int index);

    int xindexOf(final $p$ o);

    int xlastIndexOf(final $p$ o);

    boolean xcontains(final int from, final int to, final $p$ o);

    int xindexOf(final int from, final int to, final $p$ o);

    int xlastIndexOf(final int from, final int to, final $p$ o);

    boolean xremove(final int from, final int to, final $p$ o);

    $p$[] xtoArray();

    $p$[] xtoArray(final $p$[] dest);

    $p$[] xtoArray(final int from, final int to);

    $p$[] xtoArray(final int from, final int to, final int destPos, final $p$[] dest);

    @Override
    $I$ListIterator iterator();

    @Override
    $I$ListIterator listIterator();

    @Override
    $I$ListIterator listIterator(final int index);

    @Override
    $I$List subList(final int from, final int to);
}
>>