delimiters "$", "$"

PPMap(Ik, Pk, pk, Iv, Pv, pv, hck, hcv, X) ::= <<
/*
 * Copyright 2015 Brent Douglas and other contributors
 * as indicated by the @authors tag. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.machinecode.vial.api.map;

import java.util.Map;

/**
 * @author <a href="mailto:brent.n.douglas@gmail.com">Brent Douglas</a>
 * @since 1.0
 */
public interface $Ik$$Iv$Map extends Map<$Pk$,$Pv$>, Iterable<$Ik$$Iv$Cursor> {

    $pv$ nv();

    boolean xcontainsKey(final $pk$ key);

    boolean xcontainsValue(final $pv$ value);

    $pv$ xget(final $pk$ key);

    $Pv$ getOrDefault(final Object key, final $Pv$ defaultValue);

    $pv$ xgetOrDefault(final $pk$ key, final $pv$ defaultValue);

    $Ik$$Iv$Map with(final $pk$ key, final $pv$ value);

    $pv$ xput(final $pk$ key, final $pv$ value);

    $Pv$ putIfAbsent(final $Pk$ key, final $Pv$ value);

    $pv$ xputIfAbsent(final $pk$ key, final $pv$ value);

    boolean remove(final Object key, final Object value);

    $pv$ xremove(final $pk$ key);

    boolean xremove(final $pk$ key, final $pv$ value);

    boolean xremoveValue(final $pv$ value);

    boolean replace(final $Pk$ key, final $Pv$ oldValue, final $Pv$ newValue);

    boolean xreplace(final $pk$ key, final $pv$ oldValue, final $pv$ newValue);

    $Pv$ replace(final $Pk$ key, final $Pv$ value);

    $pv$ xreplace(final $pk$ key, final $pv$ value);

    $Ik$$Iv$Map capacity(final int desired);

    $Ik$$Iv$Cursor iterator();
}
>>
